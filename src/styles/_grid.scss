@import '@material/layout-grid/mdc-layout-grid';

.container {
  @extend .mdc-layout-grid;
}

.row {
  @extend .mdc-layout-grid__inner;
}

@function mdc_column_suffix($column, $device) {
  @if ($column == 0) {
    @return ''
  }
  @if ($device == '') {
    @return --span-#{$column}
  }
  @return --span-#{$column}-#{$device}
}

@function class_name($column, $screen-size) {
  @if ($column == 0) {
    @return col;
  }
  @if ($screen-size == '') {
    @return col-#{$column};
  }
  @return col-#{$screen-size}-#{$column}
}

@mixin columns($devices: ()) {
  @each $tuple in $devices {
    $device: nth($tuple, 1);
    $screen-size: nth($tuple, 2);
    $col-limit: nth($tuple, 3);

    @for $column from 0 through $col-limit {
      .#{class_name($column, $screen-size)} {
        @extend .mdc-layout-grid__cell#{mdc_column_suffix($column, $device)}
      }
    }
  }
}

$device-tuples: ('' '' 12, desktop lg 12, tablet md 8, phone sm 4);
@include columns($device-tuples);

@import '@material/layout-grid/mdc-layout-grid';

.grid {
  @extend .mdc-layout-grid;
}

.grid-inner {
  @extend .mdc-layout-grid__inner;
}

@function mdc_column_suffix($column, $device) {
  @if ($column == 0) {
    @return ''
  }
  @if ($device == '') {
    @return --span-#{$column}
  }
  @return --span-#{$column}-#{$device}
}

@function class_name($column, $device) {
  @if ($column == 0) {
    @return col;
  }
  @if ($device == '') {
    @return col-#{$column};
  }
  @return col-#{$column}-#{$device}
}

@mixin columns($devices: ()) {
  $col-limit: 12;

  @each $device in $devices {
    @if ($device == phone) { $col-limit: 4}
    @if ($device == tablet) { $col-limit: 8}
    @if ($device == desktop) { $col-limit: 12}

    @for $column from 0 through $col-limit {
      .#{class_name($column, $device)} {
        @extend .mdc-layout-grid__cell#{mdc_column_suffix($column, $device)}
      }
    }
  }
}

@include columns(('', desktop, tablet, phone));
